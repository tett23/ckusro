// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Markdown  1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Markdown
    text="[[foo]]"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "text": "[[foo]]",
    },
    "ref": null,
    "rendered": Object {
      "instance": <p>
        <span
          data-reactroot=""
        >
          foo
        </span>
      </p>,
      "key": "h-1",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            data-reactroot=""
          >
            foo
          </span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <span
            data-reactroot=""
          >
            foo
          </span>,
          "key": "h-2",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "foo",
            ],
            "data-reactroot": "",
          },
          "ref": null,
          "rendered": Array [
            "foo",
          ],
          "type": "span",
        },
      ],
      "type": "p",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "text": "[[foo]]",
      },
      "ref": null,
      "rendered": Object {
        "instance": <p>
          <span
            data-reactroot=""
          >
            foo
          </span>
        </p>,
        "key": "h-1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              data-reactroot=""
            >
              foo
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              data-reactroot=""
            >
              foo
            </span>,
            "key": "h-2",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "foo",
              ],
              "data-reactroot": "",
            },
            "ref": null,
            "rendered": Array [
              "foo",
            ],
            "type": "span",
          },
        ],
        "type": "p",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
