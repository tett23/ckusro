// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TreeViewItem renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TreeViewItem
    context={
      Object {
        "loaderConfig": Object {
          "enable": /\\\\\\.\\(md\\|txt\\)\\$/,
          "ignore": Array [
            /\\\\\\.git/,
            /node_modules/,
          ],
        },
        "name": "test_namespace",
        "path": "/test",
        "type": "LocalLoaderContext",
      }
    }
    file={
      Object {
        "content": "[[bar.md]]",
        "fileType": "markdown",
        "id": "test_1",
        "isLoaded": true,
        "name": "foo.md",
        "namespace": "test",
        "path": "/foo.md",
        "strongDependencies": Array [
          "test:/bar.md",
        ],
        "variables": Array [],
        "weakDependencies": Array [
          "test:/bar.md",
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <a
            href="/test/foo.html"
          >
            foo.md
          </a>
        </div>,
        <Children />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <a
            href="/test/foo.html"
          >
            foo.md
          </a>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "foo.md",
            "href": "/test/foo.html",
          },
          "ref": null,
          "rendered": "foo.md",
          "type": "a",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "items": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <a
              href="/test/foo.html"
            >
              foo.md
            </a>
          </div>,
          <Children />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <a
              href="/test/foo.html"
            >
              foo.md
            </a>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "foo.md",
              "href": "/test/foo.html",
            },
            "ref": null,
            "rendered": "foo.md",
            "type": "a",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "items": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`TreeViewItem renders correctly when the component have children 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TreeViewItem
    context={
      Object {
        "loaderConfig": Object {
          "enable": /\\\\\\.\\(md\\|txt\\)\\$/,
          "ignore": Array [
            /\\\\\\.git/,
            /node_modules/,
          ],
        },
        "name": "test_namespace",
        "path": "/test",
        "type": "LocalLoaderContext",
      }
    }
    file={
      Object {
        "content": "[[bar.md]]",
        "fileType": "markdown",
        "id": "test_1",
        "isLoaded": true,
        "name": "foo.md",
        "namespace": "test",
        "path": "/foo.md",
        "strongDependencies": Array [
          "test:/bar.md",
        ],
        "variables": Array [],
        "weakDependencies": Array [
          "test:/bar.md",
        ],
      }
    }
  >
    <TreeViewItem
      context={
        Object {
          "loaderConfig": Object {
            "enable": /\\\\\\.\\(md\\|txt\\)\\$/,
            "ignore": Array [
              /\\\\\\.git/,
              /node_modules/,
            ],
          },
          "name": "test_namespace",
          "path": "/test",
          "type": "LocalLoaderContext",
        }
      }
      file={
        Object {
          "content": "[[bar.md]]",
          "fileType": "markdown",
          "id": "test_2",
          "isLoaded": true,
          "name": "foo.md",
          "namespace": "test",
          "path": "/foo.md",
          "strongDependencies": Array [
            "test:/bar.md",
          ],
          "variables": Array [],
          "weakDependencies": Array [
            "test:/bar.md",
          ],
        }
      }
    />
  </TreeViewItem>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <a
            href="/test/foo.html"
          >
            foo.md
          </a>
        </div>,
        <Children
          items={
            <TreeViewItem
              context={
                Object {
                  "loaderConfig": Object {
                    "enable": /\\\\\\.\\(md\\|txt\\)\\$/,
                    "ignore": Array [
                      /\\\\\\.git/,
                      /node_modules/,
                    ],
                  },
                  "name": "test_namespace",
                  "path": "/test",
                  "type": "LocalLoaderContext",
                }
              }
              file={
                Object {
                  "content": "[[bar.md]]",
                  "fileType": "markdown",
                  "id": "test_2",
                  "isLoaded": true,
                  "name": "foo.md",
                  "namespace": "test",
                  "path": "/foo.md",
                  "strongDependencies": Array [
                    "test:/bar.md",
                  ],
                  "variables": Array [],
                  "weakDependencies": Array [
                    "test:/bar.md",
                  ],
                }
              }
            />
          }
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <a
            href="/test/foo.html"
          >
            foo.md
          </a>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "foo.md",
            "href": "/test/foo.html",
          },
          "ref": null,
          "rendered": "foo.md",
          "type": "a",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "items": <TreeViewItem
            context={
              Object {
                "loaderConfig": Object {
                  "enable": /\\\\\\.\\(md\\|txt\\)\\$/,
                  "ignore": Array [
                    /\\\\\\.git/,
                    /node_modules/,
                  ],
                },
                "name": "test_namespace",
                "path": "/test",
                "type": "LocalLoaderContext",
              }
            }
            file={
              Object {
                "content": "[[bar.md]]",
                "fileType": "markdown",
                "id": "test_2",
                "isLoaded": true,
                "name": "foo.md",
                "namespace": "test",
                "path": "/foo.md",
                "strongDependencies": Array [
                  "test:/bar.md",
                ],
                "variables": Array [],
                "weakDependencies": Array [
                  "test:/bar.md",
                ],
              }
            }
          />,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <a
              href="/test/foo.html"
            >
              foo.md
            </a>
          </div>,
          <Children
            items={
              <TreeViewItem
                context={
                  Object {
                    "loaderConfig": Object {
                      "enable": /\\\\\\.\\(md\\|txt\\)\\$/,
                      "ignore": Array [
                        /\\\\\\.git/,
                        /node_modules/,
                      ],
                    },
                    "name": "test_namespace",
                    "path": "/test",
                    "type": "LocalLoaderContext",
                  }
                }
                file={
                  Object {
                    "content": "[[bar.md]]",
                    "fileType": "markdown",
                    "id": "test_2",
                    "isLoaded": true,
                    "name": "foo.md",
                    "namespace": "test",
                    "path": "/foo.md",
                    "strongDependencies": Array [
                      "test:/bar.md",
                    ],
                    "variables": Array [],
                    "weakDependencies": Array [
                      "test:/bar.md",
                    ],
                  }
                }
              />
            }
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <a
              href="/test/foo.html"
            >
              foo.md
            </a>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "foo.md",
              "href": "/test/foo.html",
            },
            "ref": null,
            "rendered": "foo.md",
            "type": "a",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "items": <TreeViewItem
              context={
                Object {
                  "loaderConfig": Object {
                    "enable": /\\\\\\.\\(md\\|txt\\)\\$/,
                    "ignore": Array [
                      /\\\\\\.git/,
                      /node_modules/,
                    ],
                  },
                  "name": "test_namespace",
                  "path": "/test",
                  "type": "LocalLoaderContext",
                }
              }
              file={
                Object {
                  "content": "[[bar.md]]",
                  "fileType": "markdown",
                  "id": "test_2",
                  "isLoaded": true,
                  "name": "foo.md",
                  "namespace": "test",
                  "path": "/foo.md",
                  "strongDependencies": Array [
                    "test:/bar.md",
                  ],
                  "variables": Array [],
                  "weakDependencies": Array [
                    "test:/bar.md",
                  ],
                }
              }
            />,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
